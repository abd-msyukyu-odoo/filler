recup le numero de player avant la premiere carte

ajouter la couleur de contact pour les ranges ?

-> les ranges doivent contenir les coordonnees (sans blague)

retirer le flag -Wno-unused-function

ydecode player -> read line

yread input -> read bloc
	yread plateau -> read line + ydecode size plateau
	read line >< yignore line
	read y * (1 + x + (3 * min(x, 1000)) + (4 * min(x - 1000, 9000)) + ...
	ydecode map
	yread piece -> read line + ydecode size piece
	yread y * (1 + x)
	ydecode crop + ydecode piece

a scorer : 	atteindre un mur pour la premiere fois, proche de l'ennemi (mid to high) / securiser une surface
			bloquer une diagonale (mid to high)
			reduire le perimetre de l'ennemi (mid to high)
			remplir un trou interne (low)
			se rapprocher de l'ennemi (high to zero (upon contact))
			

2 segfault :	decode pc (decode_input)
				yrng_h_hi (ynext_hp) (ynext_pc_pos)

-> 

pour chaque placement de piece, parcourir le contour de la piece
pour chaque case du contour, calculer la distance avec l'ennemi
faire la somme de ces distances
garder le placement de piece qui minimise la somme des distances
-> condition : avoir un point de depart secondaire pour le contour de la piece (autre que celui utilise pour le placement de la piece)
-> creer une structure "point de depart", changer la structure de player et de piece
-> changer la signature des fonctions relatives au point de depart pour se baser sur un point de depart externe


>>>>>>>>>>>optionnel :
-> fusion de la nouvelle piece avec l'ancienne map (limiter le nombre de malloc/free)

>>>>>>>>>>>indispensable :
-> exception a la regle du plus "proche de l'ennemi" si :
	ne touche pas l'ennemi (ambigu, a preciser) -> aucun rayon du contour ne vise l'ennemi directement
		-> ajouter une limite de distance a cette regle ? -> rare